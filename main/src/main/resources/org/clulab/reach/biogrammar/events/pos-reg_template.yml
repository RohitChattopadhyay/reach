
#
# Template for positive regulation|activation
#

#
# Global notes (applying to both pos-reg and neg-reg rules):
# use nmod_in$ instead of nmod_in, to avoid matching nmod_including, which has different semantics
#

vars: org/clulab/reach/biogrammar/vars.yml

rules:

# note: nsubjpass for controller should not be there in an ideal world; but it does show up in practice
- name: Positive_${ ruleType }_syntax_1_verb
  priority: ${ priority }
  example: "X activates Y"
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & !word=/^cataly/ & tag=/^V|RB/] [lemma=/^(${ auxtriggers })/ & tag=/^V/]?
    controlled:${ controlledType } = /${adjective_clause}|${adverbial_clause}/? (/${objects}|${complements}/ [!lemma=/resistance|sensitivity/])
      (/${conjunctions}|dep|${objects}|compound|nmod_of|nmod_in$|amod/){,2}
    controller:${ controllerType } = </${complements}/? (${agents} | nsubjpass | /${passive_agents}/ | </${adjective_clause}|${adverbial_clause}/) /compound|${conjunctions}|nmod_of|nmod_in$/{,2}


- name: Positive_${ ruleType }_syntax_1a_verb #Added by jmculnan
  priority: ${ priority }
  example: "X restores Y"
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & !word=/^cataly/ & tag=/^V|RB/] [lemma=/^(${ posTriggers })/ & tag=/^V/]?
    controlled:${ controlledType } = /${complements}/ ${objects}
    controller:${ controllerType } = /${passive_agents}/ nmod_of?

- name: Positive_${ ruleType }_syntax_1b_verb
  priority: ${ priority }
  example: "X positively regulates Y"
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [lemma=/^positive/] [lemma="regulate" & !tag=/^JJ/] # moved "constraint: advmod [word=/^positive/]" here
    controlled:${ controlledType } = ${objects} /compound|amod/{,2}
    controller:${ controllerType } = </${complements}/? (${agents} | /${passive_agents}/) compound{,2}


# Handles occurrence of nmod_by when NOT passive voice
- name: Positive_${ ruleType }_syntax_1c_verb
  priority: ${ priority }
  example: "X promotes pathway by Y"
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/^V|RB/] the? [lemma=/pathway/ & tag=/^N/]
    controlled:${ controlledType } = /${passive_agents}/ /${conjunctions}|dep|${objects}|compound|nmod_of|nmod_in$|amod/{,2}
    controller:${ controllerType } = </${complements}/? (${agents} | /${passive_agents}/ | </${adjective_clause}|${adverbial_clause}/) /compound|${conjunctions}|nmod_of|nmod_in$/{,2}


# Note: Captures passive voice; thus verb must be VBD|VBN
- name: Positive_${ ruleType }_syntax_2_verb
  priority: ${ priority }
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/VBD|VBN|RB/] [lemma=/^(${ auxtriggers })/ & tag=/^V/]?
    controlled:${ controlledType } = (>/^nsubj/|${agents}|</${adjective_clause}|${adverbial_clause}/) /${conjunctions}|compound|dep|amod/{,2}
    controller:${ controllerType } = (${passive_agents}) /${conjunctions}|compound|dep|amod|nmod_of|nmod_in$/{,2}



- name: Positive_${ ruleType }_syntax_3_verb
  priority: ${ priority }
  example: ""
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & !outgoing=nsubjpass & tag=/^V|RB/] [lemma=/^(${ auxtriggers })/ & tag=/^V/]?
    controlled:${ controlledType } = ( (/nmod_[^b]|${conjunctions}|compound|amod/{,2}) | (< /nmod_|${conjunctions}|compound|amod/{1,2}) )
    controller:${ controllerType } = <compound{,2} | (/${passive_agents}/) /compound|${conjunctions}|amod/{,2}

- name: Positive_${ ruleType }_syntax_3a_verb #Masha
  priority: ${ priority }
  example: "the phosphorylation of Ras promotes the ubiquitination of MEK"
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & !word=/^cataly/ & tag=/^V|RB/] [lemma=/^(${ auxtriggers })/ & tag=/^V/]?
    controlled:${ controlledType } = (${objects} [!lemma=/resistance|sensitivity/]) /compound|nmod_of/{,1}
    controller:${ controllerType } = ${agents} /nmod_of|compound/{,1}
#this rule fixed 6/9 remaning act tests

- name: Positive_${ ruleType }_syntax_4_verb
  priority: ${ priority }
  example: ""
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/^V|RB/] [lemma=/^(${ auxtriggers })/ & tag=/^V/]?
    controlled:${ controlledType } = (nsubjpass /${conjunctions}|compound|amod/{,2})
    controller:${ controllerType } = (/nmod_/ /${conjunctions}|compound|amod/{,2})? /nmod_/{,2} /${passive_agents}/ /${conjunctions}|compound|amod/{,2}


- name: Positive_${ ruleType }_syntax_5_verb
  priority: ${ priority }
  example: ""
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/^V|RB/] [lemma=/^(${ auxtriggers })/ & tag=/^V/]?
    controlled:${ controlledType } = ${objects} /compound|amod|${conjunctions}/{,2}
    controller:${ controllerType } = (</${complements}|${standalone_appositive}/ | </${relative_clause}/){1,2} /compound|amod|${conjunctions}/{,2}


- name: Positive_${ ruleType }_syntax_6_verb
  priority: ${ priority }
  example: ""
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/VBN|RB/] [lemma=/^(${ auxtriggers })/ & tag=/^VBN/]?
    controlled:${ controlledType } = (</${complements}|${standalone_appositive}/ | </${relative_clause}/){1,2} /compound|amod|${conjunctions}/{,2}
    controller:${ controllerType } = /${passive_agents}/ /compound|amod|${conjunctions}/{,2}


- name: Positive_${ ruleType }_syntax_7_verb
  priority: ${ priority }
  example: "ASPP1 aids in the translocation of Kras to the membrane."
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/] # "aids" is incorrectly tagged as a noun
    controlled:${ controlledType } = nmod_in$ | nmod_to
    controller:${ controllerType } = (${agents} | </${relative_clause}/) /compound|amod|${conjunctions}/{,2}


- name: Positive_${ ruleType }_syntax_8_verb
  priority: ${ priority }
  example: "We found that prolonged expression of active Ras resulted in up-regulation of the MKP3 gene"
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [lemma=result] in [word=/(?i)^(${ triggers })/]
    controlled:${ controlledType } = nmod_of compound?
    controller:${ controllerType } = ${agents} /compound|nmod_of|amod|${conjunctions}/{,2}


- name: Positive_${ ruleType }_syntax_1_noun
  priority: ${ priority }
  example: ""
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/^N/] [lemma=/^(${ auxtriggers })/]?
    controlled:${ controlledType } = /nmod_of|nmod_in$/ /compound|amod|${conjunctions}/{,2}
    controller:${ controllerType } = /nmod_of/? /${passive_agents}/ (<dobj|${passive_agents}|compound|amod|nmod_of|nmod_in$){1,2} /compound|amod|${conjunctions}/{,2} # the nmod_of may appear due to bad syntax


- name: Positive_${ ruleType }_syntax_2_noun
  priority: ${ priority }
  example: ""
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/^N/] [lemma=/^(${ auxtriggers })/ & tag=/^N/]?
    controlled:${ controlledType } = /nmod_of|nmod_in$/? /${conjunctions}|compound|amod/{1,2}
    controller:${ controllerType } = /nmod_of/? /${passive_agents}/ /${conjunctions}|compound|amod/{,2} # the nmod_of may appear due to bad syntax


- name: Positive_${ ruleType }_syntax_3_noun
  priority: ${ priority }
  example: ""
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/^N/ & !outgoing=/${passive_agents}/] [lemma=/^(${ auxtriggers })/ & tag=/^N/]? (?! downstream)
    controlled:${ controlledType } = /nmod_of|nmod_in$/ /${conjunctions}|compound|amod/{,2}
    controller:${ controllerType } = /compound|amod/{1,2} | ${conjunctions} /${passive_agents}/ compound? 


- name: Positive_${ ruleType }_syntax_5_noun
  priority: ${ priority }
  example: ""
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/^N/] [lemma=/^(${ auxtriggers })/ & tag=/^N/]?
    controlled:${ controlledType } = < /compound|amod/ > /nmod_/ /${conjunctions}|compound|amod/{,2}
    controller:${ controllerType } = < /compound|amod/ /${conjunctions}|compound|amod/{,2}


- name: Positive_${ ruleType }_syntax_6_noun
  priority: ${ priority }
  example: ""
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/^N/] [lemma=/^(${ auxtriggers })/ & tag=/^N/]?
    controlled:${ controlledType } = (/nmod_of|nmod_in$/ /compound|amod|${conjunctions}/{,2}){1,2}
    controller:${ controllerType } = <nmod_via (${passive_agents}) /compound|amod|${conjunctions}/{,2}


- name: Positive_${ ruleType }_syntax_7_noun
  priority: ${ priority }
  example: "Rapamycin, an activator of the mTOR kinase,"
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/^N/] [lemma=/^(${ auxtriggers })/ & tag=/^N/]?
    controller:${ controllerType } = <dep /compound|amod|${conjunctions}/{,2}
    controlled:${ controlledType } = (/nmod_of|nmod_in$/ /compound|amod|${conjunctions}/{,2}){1,2}


# Captures common Hearst patterns: hypernym such as hyponym
- name: Positive_${ ruleType }_syntax_noun_Hearst
  priority: ${ priority }
  example: "HDAC activators including trichostatin A"
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [word=/(?i)^(${ triggers })/ & tag=/^N/] [lemma=/^(${ auxtriggers })/ & tag=/^N/]?
    controlled:${ controlledType } = /${conjunctions}|compound|amod/{,2}
    controller:${ controllerType } = /nmod_such_as|nmod_including|nmod_like/ (compound|${conjunctions})?


- name: Positive_${ ruleType }_copula_1
  priority: ${ priority }
  example: "A is an activator of B"
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [lemma=/be/ & tag=/^V/] []? []? [lemma=/${ triggers }/ & tag=/^N/]
    controller:${ controllerType } = ${agents}
    controlled:${ controlledType } = /nmod_of|nmod_in$/


- name: Positive_${ ruleType }_possessive_noun
  priority: ${ priority }
  example: "ASPP1 is common, as is its activation by ASPP2."
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    trigger = [lemma=/${ triggers }/ & tag=/^N/]
    controller:${ controllerType } = /${passive_agents}/
    controlled:${ controlledType } = /"nmod:poss"/


- name: Positive_${ ruleType }_token_1_verb
  priority: ${ priority }
  type: token
  label: ${ label }
  example: "monoubiquitinated K-Ras is less sensitive than the unmodified protein to GAP-mediated GTP hydrolysis"
  action: ${ actionFlow }
  pattern: |
    @controller:${ controllerType } (?<trigger> [word=/(?i)^(${ triggers })/ & !tag=/^JJ/]) @controlled:${ controlledType }

- name: Positive_${ ruleType }_token_1b_verb
  priority: ${ priority }
  type: token
  label: ${ label }
  example: "Interacting proteins that facilitate FGFR3 mediated STAT1 activation could exist in cells."
  action: ${ actionFlow }
  pattern: |
    @controller:${ controllerType } (?<trigger> [word=/(?i)^(mediat)/ & !tag=/^JJ/]) @controlled:${ controlledType } /(?i)^(activation)/


- name: Positive_${ ruleType }_token_1_noun
  priority: ${ priority }
  example: "mTOR activator Rapamycin"
  type: token
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    @controlled:${ controlledType } (?<trigger> [word=/(?i)^(${ triggers })/ & tag=/^NN/]) @controller:${ controllerType }


# this rule is needed because PP attachment of "by" is often wrong
- name: Positive_${ ruleType }_token_2_noun
  priority: ${ priority }
  example: "Activation of mTOR by rapamycin has been standard treatment "
  type: token
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    (?<trigger> [word=/(?i)^(${ triggers })/ & tag=/^NN/]) of @controlled:${ controlledType } by @controller:${ controllerType } (?! [lemma=/${ negTriggers }/ ])


# a rule written to catch an example from MITRE
# currently unclear how common this pattern may be...
- name: Positive_${ ruleType }_token_experimental_results_1
  priority: ${ priority }
  example: "Cells were additionally stimulated with 10 ng/ml leptin and cell extracts analyzed for ErbB3 tyrosine phosphorylation."
  type: token
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    # passive verb ("stimulated" in the example)
    (?<trigger> [word=/(?i)^(${ triggers })/ & tag=VBN])
    # "leptin" in our example
    with /./{,2} @controller:${ controllerType }
    # analyzed, examined, etc.
    # hopefully this isn't too noisy...
    and /./{,3} [tag=/^V/] for
    # the phosphorylation in our example
    @controlled:${ controlledType }

#
# Rules for (deeply) nested events that cross into causal precedence
#
# TODO: is there a good way to check assure the proper polarity in these patterns?
#- name: Positive_${ ruleType }_nested_syntax_1_verb
#  priority: ${ priority }
#  example: "These results imply that Ack1 mediated Ras phosphorylation results in subsequent AKT activation."
#  label: ${ label }
#  action: ${ actionFlow }
#  pattern: |
#    trigger = [lemma=result] in # TODO: expand lemma pattern for trigger
#    # xcomp for "A, resulting in B" pattern
#    controller:${ controllerType } = ${agents}|/${complements}/
#    controlled:${ controlledType } = nmod_in (nn|${conjunctions})?


- name: Positive_${ ruleType }_nested_syntax_2_verb
  priority: ${ priority }
  example: "We also demonstrate that tyrosine phosphorylation of ErbB3 may lead to recruitment and activation of PI-3 kinase."
  label: ${ label }
  action: ${ actionFlow }
  pattern: |
    # TODO: expand lemma pattern for trigger
    trigger = [lemma=lead] to
    # xcomp for "A, leading to B" pattern
    controller:${ controllerType } = ${agents}|/${complements}/
    # "leading to activation"
    controlled:${ controlledType } = (?= nmod_to [word=/(?i)^(${ triggers })/]) nmod_to nmod_of? compound?
